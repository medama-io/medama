name: Tests
on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint core
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8
        with:
          version: v2.4.0
          working-directory: core

      - name: Lint dashboard
        run: task dashboard:lint:ci

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        run: task core:test

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup environment
        uses: ./.github/actions/setup-env
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install ARM64 toolchain
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Clear Go module cache
        run: |
          cd core
          go clean -modcache
          go mod download

      - name: Build
        run: task core:release:${{ matrix.os == 'ubuntu-latest' && 'linux' || 'darwin' }}:${{ matrix.arch }}
