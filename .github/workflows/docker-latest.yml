name: Docker Latest Publish # Publish Docker images under `latest` and tagged versions
on:
  release:
    types: [released]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: docker-latest-group
  cancel-in-progress: false

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build:
    name: Build ${{ matrix.arch }} image
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - id: amd64
            arch: amd64
            runner: ubuntu-latest
            platform: linux/amd64
          - id: arm64
            arch: arm64
            runner: ubuntu-24.04-arm
            platform: linux/arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Save GitHub tag and commit sha to environment
        run: |
          echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-${{ matrix.arch }}
          tags: |
            type=ref,event=tag
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.licenses=Apache-2.0

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ env.VERSION }}
            COMMIT_SHA=${{ env.COMMIT_SHA }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}

      - name: Generate attestation for this image
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  create-manifest:
    name: Create multi-arch manifest
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for manifest
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: latest=true
          tags: |
            type=ref,event=tag

      - name: Create and push multi-arch manifest
        run: |
          for tag in $(echo '${{ steps.meta.outputs.tags }}' | tr ',' '\n'); do
            echo "Creating manifest for tag: ${tag}"
            docker buildx imagetools create \
              --tag ${tag} \
              ${tag}-amd64 \
              ${tag}-arm64
          done
