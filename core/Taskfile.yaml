# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

includes:
  dashboard:
    dir: ../dashboard
    taskfile: ../dashboard/Taskfile.yaml
    internal: true

  tracker:
    dir: ../tracker
    taskfile: ../tracker/Taskfile.yaml
    internal: true

tasks:
  dev:
    deps: [generate]
    cmds:
      - go run -tags "no_duckdb_arrow" ./cmd/ {{.CLI_ARGS}} -logger=pretty -level=debug -corsorigins=http://localhost:8080,http://localhost:5173
    env:
      CGO_ENABLED: "1"

  build:
    deps: [generate]
    cmds:
      - go build -o ./bin/main -tags "no_duckdb_arrow" ./cmd/
    env:
      CGO_ENABLED: "1"

  start:
    deps: [build]
    cmds:
      - ./bin/main {{.CLI_ARGS}}

  generate:go:
    cmds:
      - go generate ./...
    sources:
      - ./openapi.yaml
      - ./.ogen.yml
      - ./generate.go
      - ./generate.sh
      - ./go.mod
      - ./go.sum
    generates:
      - ./api/**/*.go

  generate:
    cmds:
      - task: generate:go
      - task: dashboard:embed
      - task: tracker:embed

  update:
    aliases: [upgrade]
    cmds:
      - go get -u ./...
      - go mod tidy

  fixtures:
    cmds:
      - rm -rf ./db/duckdb/testdata/fixtures/simple.test.db
      - go run ./db/duckdb/testdata

  lint:
    cmds:
      - go vet ./...
      - golangci-lint run ./... --fix

  coverage:
    cmds:
      - go-acc ./... -o coverage.out
      - go tool cover -html=coverage.out

  test:
    deps: [generate:go]
    cmds:
      - go test -v ./...
    env:
      CGO_ENABLED: "1"

  # Release workflows
  # Local build
  release:
    deps: [generate]
    cmds:
      - go build -o ./bin/main -ldflags "-s -w" -trimpath -tags "no_duckdb_arrow" ./cmd/
    env:
      CGO_ENABLED: "1"

  release:linux:amd64:
    cmds:
      - go build -o ./bin/medama_linux_amd64 -ldflags "-s -w -X main.Version=$VERSION -X main.Commit=$COMMIT_SHA" -trimpath -tags "no_duckdb_arrow" ./cmd/
      - chmod +x ./bin/medama_linux_amd64
      - echo "linux/amd64 build done"
    env:
      CGO_ENABLED: "1"
      GOOS: "linux"
      GOARCH: "amd64"

  release:linux:arm64:
    cmds:
      - go build -o ./bin/medama_linux_arm64 -ldflags "-s -w -X main.Version=$VERSION -X main.Commit=$COMMIT_SHA" -trimpath -tags "no_duckdb_arrow" ./cmd/
      - chmod +x ./bin/medama_linux_arm64
      - echo "linux/arm64 build done"
    env:
      CC: "aarch64-linux-gnu-gcc"
      CXX: "aarch64-linux-gnu-g++"
      CGO_ENABLED: "1"
      GOOS: "linux"
      GOARCH: "arm64"

  release:darwin:amd64:
    cmds:
      - go build -o ./bin/medama_darwin_amd64 -ldflags "-s -w -X main.Version=$VERSION -X main.Commit=$COMMIT_SHA" -trimpath -tags "no_duckdb_arrow" ./cmd/
      - chmod +x ./bin/medama_darwin_amd64
      - echo "darwin/amd64 build done"
    env:
      CGO_ENABLED: "1"
      GOOS: "darwin"
      GOARCH: "amd64"

  release:darwin:arm64:
    cmds:
      - go build -o ./bin/medama_darwin_arm64 -ldflags "-s -w -X main.Version=$VERSION -X main.Commit=$COMMIT_SHA" -trimpath -tags "no_duckdb_arrow" ./cmd/
      - chmod +x ./bin/medama_darwin_arm64
      - echo "darwin/arm64 build done"
    env:
      CGO_ENABLED: "1"
      GOOS: "darwin"
      GOARCH: "arm64"
